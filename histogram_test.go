package ghist

import (
	"math"
	"testing"
)

var (
	testValues      = []float64{0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0}
	testValuesNeg   = []float64{0.0, -1.0, -2.0, -3.0, -4.0, -5.0, -6.0, -7.0, -8.0, -9.0}
	testValuesMixed = []float64{0.0, -1.0, 2.0, -3.0, 4.0, -5.0, 6.0, -7.0, 8.0, -9.0}
)

// TODO: move percentiles to TestStatistics, and add checks for max/min/count in TestHistogram
func TestHistogram(t *testing.T) {
	hist := New(5)
	var (
		count uint64  = 0
		sum   float64 = 0.0
	)
	// create a test histogram with n+1 instances of testValues[n]
	for j, val := range testValues {
		for i := 0; i <= j; i++ {
			hist.Add(val)
			sum += val
			count++
		}
	}
	if hist.Count != count {
		t.Fatalf("Wrong number of entries in histogram; got %d expected %d\n", hist.Count, count)
	}
	if hist.Sum != sum {
		t.Fatalf("Wrong sum of values in histogram; got %d expected %d\n", hist.Sum, sum)
	}
	if pct := hist.Percentile(0.0); pct != 0.0 {
		t.Fatalf("Wrong percentile for value 0.0; got %f expected %f\n", pct, 0.0)
	}
	if pct := hist.Percentile(1.0); pct != 3.0/55.0 {
		t.Fatalf("Wrong percentile for value 1.0; got %f expected %f\n", pct, 3.0/55.0)
	}
	if pct := hist.Percentile(9.0); pct != 1.0 {
		t.Fatalf("Wrong percentile for value 9.0; got %f expected %f\n", pct, 1.0)
	}

	hist = New(5)
	count = 0
	sum = 0
	// create a test histogram with n+1 instances of testValuesNeg[n]
	for j, val := range testValuesNeg {
		for i := 0; i <= j; i++ {
			hist.Add(val)
			sum += val
			count++
		}
	}
	if hist.Count != count {
		t.Fatalf("Wrong number of entries in histogram; got %d expected %d\n", hist.Count, count)
	}
	if hist.Sum != sum {
		t.Fatalf("Wrong sum of values in histogram; got %d expected %d\n", hist.Sum, sum)
	}
	if pct := hist.Percentile(0.0); pct != 1.0 {
		t.Fatalf("Wrong percentile for value 0.0; got %f expected %f\n", pct, 1.0)
	}
	if pct := hist.Percentile(-9.0); pct != 0.0 {
		t.Fatalf("Wrong percentile for value -9.0; got %f expected %f\n", pct, 0.0)
	}

	hist = New(5)
	count = 0
	sum = 0
	// create a test histogram with n+1 instances of testValuesMixed[n]
	for j, val := range testValuesMixed {
		for i := 0; i <= j; i++ {
			hist.Add(val)
			sum += val
			count++
		}
	}
	if hist.Count != count {
		t.Fatalf("Wrong number of entries in histogram; got %d expected %d\n", hist.Count, count)
	}
	if hist.Sum != sum {
		t.Fatalf("Wrong sum of values in histogram; got %d expected %d\n", hist.Sum, sum)
	}
	if pct := hist.Percentile(-9.0); pct != 0.0 {
		t.Fatalf("Wrong percentile for value -9.0; got %f expected %f\n", pct, 0.0)
	}
	if pct := hist.Percentile(8.0); math.Floor(pct*100) != 90 {
		t.Fatalf("Wrong percentile for value 8.0; got %f expected %f\n", pct, 0.9091)
	}
	if pct := hist.Percentile(0.0); pct != 30.0/55.0 {
		t.Fatalf("Wrong percentile for value 0.0; got %f expected %f\n", pct, 30.0/55.0)
	}
}

func TestStatistics(t *testing.T) {
	hist := New(5)
	var count uint64 = 0
	// create a test histogram with n+1 instances of testValues[n]
	for j, val := range testValues {
		for i := 0; i <= j; i++ {
			hist.Add(val)
			count++
		}
	}
	if hist.Mean() != 6.0 {
		t.Fatalf("Wrong mean for histogram; got %f expected %f\n", hist.Mean(), 6.0)
	}
	if hist.Median() != 6.5 {
		t.Fatalf("Wrong median for histogram; got %f expected %f\n", hist.Median(), 6.5)
	}
	if hist.Mode().Count != 19 {
		t.Fatalf("Wrong mode for histogram; got %d expected %d\n", hist.Mode().Count, 19)
	}
}

func TestLargeUnordered(t *testing.T) {
	hist := NewRatioHistogram(100, 10)
	for _, value := range unorderedData {
		hist.Add(value)
	}

	if hist.Mode().Count != 107 {
		t.Fatalf("Wrong mode for histogram; got %d expected %d\n", hist.Mode().Count, 107)
	}
}

var unorderedData = []float64{
	0.25,
	0.23,
	0.00,
	3.34,
	0.21,
	0.00,
	0.00,
	6.26,
	0.06,
	0.06,
	0.07,
	0.08,
	11.75,
	7.87,
	0.03,
	0.62,
	0.15,
	0.12,
	13.99,
	0.00,
	16.94,
	1.30,
	0.16,
	0.10,
	3.07,
	1.81,
	0.03,
	0.11,
	5.65,
	1.08,
	0.44,
	0.35,
	0.32,
	0.88,
	0.17,
	0.13,
	1.15,
	0.09,
	0.69,
	0.11,
	0.10,
	0.04,
	0.60,
	0.00,
	0.21,
	0.00,
	124.95,
	11.71,
	0.26,
	0.12,
	0.04,
	0.16,
	0.33,
	0.10,
	0.00,
	0.25,
	0.69,
	0.13,
	0.06,
	0.11,
	0.10,
	0.04,
	3.34,
	0.00,
	184.84,
	41.03,
	0.09,
	0.05,
	0.33,
	0.05,
	0.03,
	0.04,
	0.21,
	0.25,
	0.07,
	0.10,
	0.80,
	0.77,
	0.31,
	0.00,
	0.00,
	0.24,
	0.01,
	1.43,
	0.55,
	11.26,
	0.09,
	0.18,
	0.10,
	0.07,
	0.14,
	0.06,
	0.10,
	0.98,
	0.45,
	0.26,
	160.43,
	0.12,
	0.00,
	0.00,
	6.66,
	0.44,
	0.64,
	0.13,
	0.09,
	0.05,
	0.05,
	0.28,
	0.30,
	1.22,
	0.14,
	0.40,
	0.11,
	0.10,
	0.81,
	175.36,
	0.62,
	0.03,
	0.12,
	0.03,
	0.07,
	0.09,
	0.16,
	120.12,
	0.47,
	0.57,
	0.04,
	3.15,
	0.09,
	0.08,
	0.04,
	0.09,
	0.13,
	0.07,
	1.22,
	0.19,
	0.11,
	0.21,
	212.71,
	0.53,
	0.06,
	0.10,
	0.15,
	0.00,
	0.07,
	0.06,
	0.39,
	0.49,
	0.19,
	0.19,
	0.07,
	0.04,
	0.02,
	0.18,
	0.03,
	0.06,
	0.15,
	0.08,
	0.03,
	0.09,
	0.03,
	0.22,
	0.23,
	3.12,
	3.85,
	0.34,
	0.14,
	0.00,
	0.12,
	0.00,
	0.12,
	1.95,
	0.08,
	39.10,
	8.15,
	0.32,
	0.22,
	0.03,
	0.07,
	0.17,
	0.11,
	0.03,
	0.13,
	0.01,
	0.06,
	0.00,
	0.02,
	0.98,
	0.29,
	0.18,
	0.12,
	0.01,
	0.01,
	0.04,
	0.29,
	0.03,
	0.04,
	0.93,
	0.07,
	0.17,
	0.08,
	0.30,
	0.14,
	17.74,
	0.03,
	0.09,
	0.15,
	0.60,
	4.38,
	0.12,
	0.04,
	0.00,
	0.13,
	0.18,
	0.24,
	0.13,
	0.10,
	4.10,
	0.00,
	0.09,
	0.08,
	0.03,
	0.09,
	27.23,
	0.08,
	0.03,
	0.11,
	0.15,
	0.08,
	0.14,
	108.20,
	0.28,
	0.05,
	0.64,
	0.00,
	0.26,
	0.04,
	10.17,
	0.05,
	0.22,
	0.10,
	0.04,
	0.47,
	0.94,
	0.31,
	0.11,
	0.05,
	0.64,
	1.27,
	0.03,
	0.58,
	0.04,
	0.03,
	0.11,
	190.97,
	0.17,
	0.12,
	0.12,
	0.12,
	0.23,
	0.09,
	0.00,
	0.12,
	0.03,
	0.14,
	0.08,
	0.18,
	0.53,
	0.03,
	0.03,
	0.05,
	0.17,
	0.10,
	0.08,
	0.17,
	0.19,
	0.33,
	0.12,
	0.00,
	0.61,
	0.09,
	0.08,
	0.09,
	0.61,
	0.16,
	1.09,
	0.17,
	0.10,
	0.01,
	0.10,
	0.19,
	0.13,
	0.12,
	0.04,
	0.08,
	0.06,
	0.73,
	0.11,
	0.10,
	0.39,
	0.13,
	0.12,
	0.04,
	0.65,
	0.09,
	0.05,
	13.70,
	0.00,
	0.05,
	0.07,
	0.03,
	0.03,
	0.11,
	0.06,
	0.24,
	0.04,
	0.08,
	0.22,
	0.08,
	0.03,
	0.34,
	0.06,
	0.04,
	0.08,
	0.17,
	0.09,
	0.11,
	0.22,
	0.06,
	0.13,
	0.07,
	0.28,
	0.08,
	0.37,
	0.34,
	0.28,
	0.00,
	0.09,
	0.73,
	0.31,
	3.63,
	0.22,
	0.00,
	0.00,
	0.12,
	0.05,
	0.04,
	0.10,
	0.20,
	0.13,
	0.03,
	0.01,
	0.10,
	0.01,
	0.22,
	0.29,
	28.53,
	1.03,
	0.31,
	0.15,
	0.17,
	1.83,
	0.23,
	0.03,
	0.43,
	0.73,
	0.04,
	0.27,
	0.08,
	5.20,
	0.28,
	3.75,
	0.20,
	0.08,
	0.14,
	0.12,
	0.06,
	0.08,
	0.39,
	0.14,
	0.11,
	0.21,
	0.14,
	0.08,
	0.16,
	0.23,
	0.25,
	0.09,
	19.57,
	0.33,
	0.16,
	4.75,
	0.15,
	5.41,
	0.09,
	0.25,
	0.06,
	0.07,
	0.03,
	0.10,
	0.10,
	0.02,
	0.20,
	0.10,
	0.16,
	0.02,
	0.06,
	0.11,
	0.12,
	0.84,
	0.45,
	0.10,
	0.09,
	0.00,
	0.00,
	0.19,
	0.11,
	0.20,
	1.10,
	0.15,
	0.15,
	0.15,
	0.00,
	0.00,
	0.10,
	1.56,
	0.11,
	0.27,
	0.08,
	0.19,
	0.75,
	0.10,
	0.09,
	0.10,
	0.49,
	0.68,
	0.18,
	0.03,
	0.35,
	2.76,
	0.46,
	0.14,
	0.07,
	1.17,
	0.07,
	0.27,
	0.21,
	0.37,
	0.42,
	0.00,
	7.42,
	4.66,
	0.16,
	0.03,
	0.01,
	0.17,
	0.65,
	0.25,
	0.11,
	0.11,
	0.14,
	0.22,
	0.07,
	0.14,
	0.10,
	0.36,
	0.17,
	0.28,
	0.97,
	1.21,
	0.17,
	0.10,
	0.18,
	162.33,
	0.57,
	0.07,
	0.07,
	0.11,
	0.76,
	0.50,
	0.73,
	0.08,
	0.76,
	0.00,
	0.12,
	0.01,
	0.25,
	0.07,
	0.09,
	1.07,
	0.18,
	0.40,
	0.08,
	0.19,
	0.09,
	0.48,
	0.23,
	0.07,
	0.03,
	0.62,
	74.89,
	0.30,
	0.11,
	0.10,
	0.32,
	0.16,
	0.04,
	0.22,
	0.12,
	0.00,
	0.06,
	0.12,
	0.07,
	19.80,
	0.12,
	0.19,
	0.11,
	0.47,
	96.77,
	0.03,
	0.19,
	0.10,
	0.00,
	0.39,
	0.03,
	1.66,
	0.07,
	0.10,
	0.05,
	0.06,
	3.88,
	14.95,
	0.05,
	0.14,
	13.39,
	0.22,
	0.34,
	0.59,
	0.30,
	11.05,
	0.08,
	0.03,
	0.42,
	0.21,
	1.42,
	0.41,
	0.12,
	0.00,
	0.06,
	0.12,
	1.86,
	0.06,
	0.03,
	0.08,
	0.09,
	0.03,
	0.14,
	0.13,
	9.67,
	0.00,
	0.16,
	0.23,
	0.01,
	0.19,
	0.39,
	0.23,
	0.03,
	0.03,
	0.06,
	0.00,
	0.71,
	0.13,
	0.11,
	0.52,
	0.19,
	1.70,
	0.18,
	0.08,
	0.00,
	0.11,
	0.09,
	0.22,
	0.18,
	0.13,
	0.11,
	0.00,
	0.03,
	0.35,
	0.27,
	0.00,
	0.11,
	0.10,
	0.66,
	0.88,
	0.22,
	0.11,
	0.84,
	0.03,
	0.23,
	0.27,
	0.03,
	0.38,
	0.27,
	0.20,
	0.03,
	0.11,
	0.00,
	0.36,
	0.04,
	0.09,
	0.03,
	10.05,
	0.00,
	0.96,
	0.11,
	0.09,
	0.11,
	0.00,
	0.03,
	0.00,
	0.05,
	0.11,
	0.04,
	0.19,
	0.35,
	0.10,
	0.16,
	0.03,
	0.03,
	0.47,
	0.10,
	35.75,
	0.37,
	4.66,
	1.28,
	0.04,
	0.03,
	0.08,
	0.27,
	0.04,
	0.00,
	0.03,
	0.11,
	0.05,
	0.15,
	0.49,
	0.13,
	0.05,
	0.23,
	1.14,
	0.00,
	0.07,
	0.09,
	0.04,
	1.48,
	0.08,
	0.67,
	4.26,
	0.69,
	0.15,
	4.68,
	0.38,
	0.03,
	0.05,
	0.06,
	0.03,
	0.06,
	0.63,
	0.05,
	0.15,
	1.75,
	0.17,
	0.00,
	0.03,
	0.56,
	0.12,
	0.18,
	0.09,
	0.03,
	0.12,
	535.11,
	0.24,
	0.15,
	0.44,
	0.09,
	0.01,
	0.21,
	0.30,
	0.06,
	0.08,
	0.11,
	0.03,
	1.14,
	25.17,
	16.12,
	0.14,
	0.14,
	0.10,
	0.16,
	0.19,
	0.42,
	0.67,
	0.03,
	0.66,
	0.15,
	0.03,
	0.06,
	0.19,
	0.06,
	0.35,
	0.06,
	0.01,
	0.14,
	0.04,
	0.04,
	0.51,
	0.17,
	0.13,
	0.08,
	0.08,
	2.13,
	0.00,
	0.03,
	0.03,
	0.08,
	0.04,
	0.46,
	0.27,
	0.07,
	0.19,
	1.38,
	0.04,
	0.03,
	0.03,
	0.19,
	0.04,
	0.04,
	0.15,
	0.35,
	0.17,
	0.00,
	0.92,
	0.22,
	0.48,
	0.10,
	0.71,
	0.05,
	0.03,
	0.04,
	0.54,
	0.45,
	0.08,
	0.05,
	0.00,
	0.11,
	0.03,
	0.10,
	0.23,
	0.43,
	0.74,
	0.10,
	7.25,
	0.00,
	0.14,
	39.78,
	1.00,
	0.40,
	0.20,
	0.15,
	0.09,
	0.20,
	7.02,
	0.15,
	0.07,
	0.00,
	0.00,
	0.09,
	0.15,
	1.11,
	0.00,
	0.18,
	0.00,
	0.04,
	0.81,
	0.03,
	0.00,
	0.87,
	0.17,
	0.05,
	0.08,
	2.85,
	0.31,
	0.25,
	0.00,
	0.11,
	0.03,
	0.17,
	0.05,
	2.69,
	0.00,
	0.49,
	0.13,
	0.41,
	1.30,
	0.07,
	0.14,
	0.32,
	0.21,
	0.35,
	0.00,
	0.71,
	0.03,
	0.11,
	0.06,
	0.00,
	23.99,
	0.05,
	20.79,
	0.99,
	0.50,
	0.06,
	0.37,
	0.03,
	6.04,
	0.16,
	0.14,
	0.21,
	0.13,
	0.65,
	0.35,
	0.04,
	0.01,
	0.28,
	0.22,
	0.22,
	0.11,
	0.16,
	0.32,
	0.08,
	0.04,
	0.03,
	0.15,
	0.16,
	0.65,
	0.00,
	0.47,
	0.17,
	0.09,
	2.52,
	0.04,
	0.22,
	0.01,
	0.14,
	0.14,
	0.08,
	0.03,
	0.30,
	2.33,
	0.16,
	0.00,
	0.03,
	0.10,
	0.56,
	0.12,
	0.27,
	0.09,
	1.52,
	0.08,
	0.10,
	0.09,
	0.10,
	0.08,
	0.10,
	0.03,
	32.59,
	0.10,
	1.23,
	0.10,
	0.26,
	0.06,
	0.11,
	0.11,
	0.05,
	0.15,
	0.12,
	0.40,
	0.16,
	0.04,
	0.10,
	0.09,
	0.10,
	0.05,
	2.81,
	0.00,
	0.31,
	0.06,
	2.53,
	0.17,
	0.03,
	0.00,
	0.25,
	40.50,
	0.04,
	1.41,
	0.36,
	0.11,
	0.11,
	0.25,
	0.18,
	0.09,
	0.04,
	0.24,
	0.04,
	0.05,
	0.09,
	0.15,
	0.07,
	0.00,
	0.12,
	0.09,
	1.78,
	0.08,
	0.36,
	0.08,
	0.15,
	1.18,
	0.10,
	0.05,
	0.14,
	0.07,
	0.19,
	0.22,
	0.03,
	0.04,
	2.80,
	0.69,
	0.00,
	0.03,
	0.08,
	0.72,
	0.00,
	0.09,
	0.05,
	0.05,
	0.43,
	0.04,
	0.21,
	0.06,
	0.22,
	0.03,
	1.77,
	0.05,
	0.03,
	0.12,
	0.09,
	0.00,
	0.21,
	5.99,
	0.58,
	0.05,
	0.00,
	0.00,
	0.09,
	0.10,
	3.85,
	0.23,
	23.91,
	0.14,
	50.48,
	0.29,
	0.07,
	0.00,
	0.05,
	0.09,
	0.00,
	0.12,
	0.20,
	0.15,
	0.10,
	0.11,
	0.04,
	0.30,
	0.09,
	0.08,
	0.14,
	0.17,
	0.10,
	0.33,
	0.12,
	0.34,
	0.07,
	0.40,
	0.38,
	1.43,
	0.03,
	0.31,
	0.08,
	1.04,
	1.19,
	0.06,
	2.38,
	0.20,
	0.07,
	0.00,
	0.15,
	1.29,
	0.09,
	0.82,
	9.99,
}
